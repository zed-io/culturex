{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/mvps/culturex/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import*as fcl from\"@onflow/fcl\";import{Address}from\"@onflow/types\";var CODE=fcl.cdc(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  import NonFungibleToken from 0xNonFungibleToken\\n  import CulturalItems from 0xCulturalItems\\n\\n  pub fun main(address: Address): [UInt64] {\\n    if let collection =  getAccount(address).getCapability<&CulturalItems.Collection{NonFungibleToken.CollectionPublic, CulturalItems.CulturalItemsCollectionPublic}>(CulturalItems.CollectionPublicPath).borrow() {\\n      return collection.getIDs()\\n    }\\n\\n    return []\\n  }\\n\"])));export function fetchAccountItems(address){if(address==null)return Promise.resolve([]);// prettier-ignore\nreturn fcl.send([fcl.script(CODE),fcl.args([fcl.arg(address,Address)])]).then(fcl.decode).then(function(d){return d.sort(function(a,b){return a-b;});});}","map":{"version":3,"sources":["/Users/mvps/culturex/web/src/flow/fetch-account-items.script.js"],"names":["fcl","Address","CODE","cdc","fetchAccountItems","address","Promise","resolve","send","script","args","arg","then","decode","d","sort","a","b"],"mappings":"mLAAA,MAAO,GAAKA,CAAAA,GAAZ,KAAqB,aAArB,CACA,OAAQC,OAAR,KAAsB,eAAtB,CAEA,GAAMC,CAAAA,IAAI,CAAGF,GAAG,CAACG,GAAP,weAAV,CAaA,MAAO,SAASC,CAAAA,iBAAT,CAA2BC,OAA3B,CAAoC,CACzC,GAAIA,OAAO,EAAI,IAAf,CAAqB,MAAOC,CAAAA,OAAO,CAACC,OAAR,CAAgB,EAAhB,CAAP,CAErB;AACA,MAAOP,CAAAA,GAAG,CAACQ,IAAJ,CAAS,CACdR,GAAG,CAACS,MAAJ,CAAWP,IAAX,CADc,CAEdF,GAAG,CAACU,IAAJ,CAAS,CACPV,GAAG,CAACW,GAAJ,CAAQN,OAAR,CAAiBJ,OAAjB,CADO,CAAT,CAFc,CAAT,EAKJW,IALI,CAKCZ,GAAG,CAACa,MALL,EAKaD,IALb,CAKkB,SAAAE,CAAC,QAAIA,CAAAA,CAAC,CAACC,IAAF,CAAO,SAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAAGC,CAAd,EAAP,CAAJ,EALnB,CAAP,CAMD","sourcesContent":["import * as fcl from \"@onflow/fcl\"\nimport {Address} from \"@onflow/types\"\n\nconst CODE = fcl.cdc`\n  import NonFungibleToken from 0xNonFungibleToken\n  import CulturalItems from 0xCulturalItems\n\n  pub fun main(address: Address): [UInt64] {\n    if let collection =  getAccount(address).getCapability<&CulturalItems.Collection{NonFungibleToken.CollectionPublic, CulturalItems.CulturalItemsCollectionPublic}>(CulturalItems.CollectionPublicPath).borrow() {\n      return collection.getIDs()\n    }\n\n    return []\n  }\n`\n\nexport function fetchAccountItems(address) {\n  if (address == null) return Promise.resolve([])\n\n  // prettier-ignore\n  return fcl.send([\n    fcl.script(CODE),\n    fcl.args([\n      fcl.arg(address, Address)\n    ]),\n  ]).then(fcl.decode).then(d => d.sort((a, b) => a - b))\n}\n"]},"metadata":{},"sourceType":"module"}