{"ast":null,"code":"import * as fcl from \"@onflow/fcl\";\nimport * as t from \"@onflow/types\";\nconst CODE = fcl.cdc`\n  import KittyItemsMarket from 0xKittyItemsMarket\n\n  pub fun main(address: Address): [UInt64] {\n    if let col = getAccount(address).getCapability<&KittyItemsMarket.Collection{KittyItemsMarket.CollectionPublic}>(KittyItemsMarket.CollectionPublicPath).borrow() {\n      return col.getSaleOfferIDs()\n    } \n    \n    return []\n  }\n`;\nexport function fetchMarketItems(address) {\n  if (address == null) return Promise.resolve([]); // prettier-ignore\n\n  return fcl.send([fcl.script(CODE), fcl.args([fcl.arg(address, t.Address)])]).then(fcl.decode).then(d => d.sort((a, b) => a - b));\n}","map":{"version":3,"sources":["/Users/mvps/culturex/web/src/flow/fetch-market-items.script.js"],"names":["fcl","t","CODE","cdc","fetchMarketItems","address","Promise","resolve","send","script","args","arg","Address","then","decode","d","sort","a","b"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,aAArB;AACA,OAAO,KAAKC,CAAZ,MAAmB,eAAnB;AAEA,MAAMC,IAAI,GAAGF,GAAG,CAACG,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;AAYA,OAAO,SAASC,gBAAT,CAA0BC,OAA1B,EAAmC;AACxC,MAAIA,OAAO,IAAI,IAAf,EAAqB,OAAOC,OAAO,CAACC,OAAR,CAAgB,EAAhB,CAAP,CADmB,CAGxC;;AACA,SAAOP,GAAG,CAACQ,IAAJ,CAAS,CACdR,GAAG,CAACS,MAAJ,CAAWP,IAAX,CADc,EAEdF,GAAG,CAACU,IAAJ,CAAS,CACPV,GAAG,CAACW,GAAJ,CAAQN,OAAR,EAAiBJ,CAAC,CAACW,OAAnB,CADO,CAAT,CAFc,CAAT,EAKJC,IALI,CAKCb,GAAG,CAACc,MALL,EAKaD,IALb,CAKkBE,CAAC,IAAIA,CAAC,CAACC,IAAF,CAAO,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAArB,CALvB,CAAP;AAMD","sourcesContent":["import * as fcl from \"@onflow/fcl\"\nimport * as t from \"@onflow/types\"\n\nconst CODE = fcl.cdc`\n  import KittyItemsMarket from 0xKittyItemsMarket\n\n  pub fun main(address: Address): [UInt64] {\n    if let col = getAccount(address).getCapability<&KittyItemsMarket.Collection{KittyItemsMarket.CollectionPublic}>(KittyItemsMarket.CollectionPublicPath).borrow() {\n      return col.getSaleOfferIDs()\n    } \n    \n    return []\n  }\n`\n\nexport function fetchMarketItems(address) {\n  if (address == null) return Promise.resolve([])\n\n  // prettier-ignore\n  return fcl.send([\n    fcl.script(CODE),\n    fcl.args([\n      fcl.arg(address, t.Address)\n    ])\n  ]).then(fcl.decode).then(d => d.sort((a, b) => a - b))\n}\n"]},"metadata":{},"sourceType":"module"}