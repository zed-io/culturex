{"ast":null,"code":"import _objectSpread from\"/Users/mvps/culturex/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/mvps/culturex/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"/Users/mvps/culturex/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mvps/culturex/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{atomFamily,selectorFamily,useRecoilState,useRecoilValue}from\"recoil\";import{LOADING,IDLE,PROCESSING,SUCCESS,ERROR,IDLE_DELAY}from\"../global/constants\";import{isAccountInitialized}from\"../flow/is-account-initialized.script\";import{initializeAccount}from\"../flow/initialize-account.tx\";import{sleep}from\"../util/sleep\";import{useFlowBalance}from\"./use-flow-balance.hook\";import{useKibblesBalance}from\"./use-kibbles-balance.hook\";export var $status=atomFamily({key:\"init::status\",default:IDLE});export var $init=atomFamily({key:\"init::state\",default:selectorFamily({key:\"init::default\",get:function get(address){return function(){return isAccountInitialized(address);};}})});export var $computedInit=selectorFamily({key:\"init::computed\",get:function get(address){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref){var get,all;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:get=_ref.get;all=get($init(address));return _context.abrupt(\"return\",all.CultureToken&&all.CulturalItems&&all.CulturalItemsMarket);case 3:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}();}});export function useInitialized(address){var _useRecoilState=useRecoilState($init(address)),_useRecoilState2=_slicedToArray(_useRecoilState,2),init=_useRecoilState2[0],setInit=_useRecoilState2[1];var isInitialized=useRecoilValue($computedInit(address));var _useRecoilState3=useRecoilState($status(address)),_useRecoilState4=_slicedToArray(_useRecoilState3,2),status=_useRecoilState4[0],setStatus=_useRecoilState4[1];var flow=useFlowBalance(address);var kibble=useKibblesBalance(address);function recheck(){isAccountInitialized(address).then(setInit);}return _objectSpread(_objectSpread({},init),{},{isInitialized:isInitialized,status:isInitialized==null?LOADING:status,recheck:recheck,initialize:function initialize(){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:initializeAccount(address,{onStart:function onStart(){setStatus(PROCESSING);},onSuccess:function onSuccess(){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:recheck();flow.refresh();kibble.refresh();setStatus(SUCCESS);case 4:case\"end\":return _context2.stop();}}},_callee2);}))();},onError:function onError(){setStatus(ERROR);},onComplete:function onComplete(){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return sleep(IDLE_DELAY);case 2:setStatus(IDLE);case 3:case\"end\":return _context3.stop();}}},_callee3);}))();}});case 1:case\"end\":return _context4.stop();}}},_callee4);}))();}});}","map":{"version":3,"sources":["/Users/mvps/culturex/web/src/hooks/use-initialized.hook.js"],"names":["atomFamily","selectorFamily","useRecoilState","useRecoilValue","LOADING","IDLE","PROCESSING","SUCCESS","ERROR","IDLE_DELAY","isAccountInitialized","initializeAccount","sleep","useFlowBalance","useKibblesBalance","$status","key","default","$init","get","address","$computedInit","all","CultureToken","CulturalItems","CulturalItemsMarket","useInitialized","init","setInit","isInitialized","status","setStatus","flow","kibble","recheck","then","initialize","onStart","onSuccess","refresh","onError","onComplete"],"mappings":"wjBAAA,OACEA,UADF,CAEEC,cAFF,CAGEC,cAHF,CAIEC,cAJF,KAKO,QALP,CAMA,OACEC,OADF,CAEEC,IAFF,CAGEC,UAHF,CAIEC,OAJF,CAKEC,KALF,CAMEC,UANF,KAOO,qBAPP,CAQA,OAAQC,oBAAR,KAAmC,uCAAnC,CACA,OAAQC,iBAAR,KAAgC,+BAAhC,CACA,OAAQC,KAAR,KAAoB,eAApB,CACA,OAAQC,cAAR,KAA6B,yBAA7B,CACA,OAAQC,iBAAR,KAAgC,4BAAhC,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAGf,UAAU,CAAC,CAChCgB,GAAG,CAAE,cAD2B,CAEhCC,OAAO,CAAEZ,IAFuB,CAAD,CAA1B,CAKP,MAAO,IAAMa,CAAAA,KAAK,CAAGlB,UAAU,CAAC,CAC9BgB,GAAG,CAAE,aADyB,CAE9BC,OAAO,CAAEhB,cAAc,CAAC,CACtBe,GAAG,CAAE,eADiB,CAEtBG,GAAG,CAAE,aAAAC,OAAO,QAAI,kBAAMV,CAAAA,oBAAoB,CAACU,OAAD,CAA1B,EAAJ,EAFU,CAAD,CAFO,CAAD,CAAxB,CAQP,MAAO,IAAMC,CAAAA,aAAa,CAAGpB,cAAc,CAAC,CAC1Ce,GAAG,CAAE,gBADqC,CAE1CG,GAAG,CAAE,aAAAC,OAAO,kGAAI,mJAAQD,GAAR,MAAQA,GAAR,CACRG,GADQ,CACFH,GAAG,CAACD,KAAK,CAACE,OAAD,CAAN,CADD,iCAEPE,GAAG,CAACC,YAAJ,EAAoBD,GAAG,CAACE,aAAxB,EAAyCF,GAAG,CAACG,mBAFtC,wDAAJ,iEAF8B,CAAD,CAApC,CAQP,MAAO,SAASC,CAAAA,cAAT,CAAwBN,OAAxB,CAAiC,qBACdlB,cAAc,CAACgB,KAAK,CAACE,OAAD,CAAN,CADA,oDAC/BO,IAD+B,qBACzBC,OADyB,qBAEtC,GAAMC,CAAAA,aAAa,CAAG1B,cAAc,CAACkB,aAAa,CAACD,OAAD,CAAd,CAApC,CAFsC,qBAGVlB,cAAc,CAACa,OAAO,CAACK,OAAD,CAAR,CAHJ,qDAG/BU,MAH+B,qBAGvBC,SAHuB,qBAItC,GAAMC,CAAAA,IAAI,CAAGnB,cAAc,CAACO,OAAD,CAA3B,CACA,GAAMa,CAAAA,MAAM,CAAGnB,iBAAiB,CAACM,OAAD,CAAhC,CAEA,QAASc,CAAAA,OAAT,EAAmB,CACjBxB,oBAAoB,CAACU,OAAD,CAApB,CAA8Be,IAA9B,CAAmCP,OAAnC,EACD,CAED,sCACKD,IADL,MAEEE,aAAa,CAAbA,aAFF,CAGEC,MAAM,CAAED,aAAa,EAAI,IAAjB,CAAwBzB,OAAxB,CAAkC0B,MAH5C,CAIEI,OAAO,CAAPA,OAJF,CAKQE,UALR,sBAKqB,wMACjBzB,iBAAiB,CAACS,OAAD,CAAU,CACzBiB,OADyB,mBACf,CACRN,SAAS,CAACzB,UAAD,CAAT,CACD,CAHwB,CAInBgC,SAJmB,qBAIP,wMAChBJ,OAAO,GACPF,IAAI,CAACO,OAAL,GACAN,MAAM,CAACM,OAAP,GACAR,SAAS,CAACxB,OAAD,CAAT,CAJgB,6DAKjB,CATwB,CAUzBiC,OAVyB,mBAUf,CACRT,SAAS,CAACvB,KAAD,CAAT,CACD,CAZwB,CAanBiC,UAbmB,sBAaN,+NACX7B,CAAAA,KAAK,CAACH,UAAD,CADM,QAEjBsB,SAAS,CAAC1B,IAAD,CAAT,CAFiB,6DAGlB,CAhBwB,CAAV,CAAjB,CADiB,6DAmBlB,CAxBH,GA0BD","sourcesContent":["import {\n  atomFamily,\n  selectorFamily,\n  useRecoilState,\n  useRecoilValue,\n} from \"recoil\"\nimport {\n  LOADING,\n  IDLE,\n  PROCESSING,\n  SUCCESS,\n  ERROR,\n  IDLE_DELAY,\n} from \"../global/constants\"\nimport {isAccountInitialized} from \"../flow/is-account-initialized.script\"\nimport {initializeAccount} from \"../flow/initialize-account.tx\"\nimport {sleep} from \"../util/sleep\"\nimport {useFlowBalance} from \"./use-flow-balance.hook\"\nimport {useKibblesBalance} from \"./use-kibbles-balance.hook\"\n\nexport const $status = atomFamily({\n  key: \"init::status\",\n  default: IDLE,\n})\n\nexport const $init = atomFamily({\n  key: \"init::state\",\n  default: selectorFamily({\n    key: \"init::default\",\n    get: address => () => isAccountInitialized(address),\n  }),\n})\n\nexport const $computedInit = selectorFamily({\n  key: \"init::computed\",\n  get: address => async ({get}) => {\n    const all = get($init(address))\n    return all.CultureToken && all.CulturalItems && all.CulturalItemsMarket\n  },\n})\n\nexport function useInitialized(address) {\n  const [init, setInit] = useRecoilState($init(address))\n  const isInitialized = useRecoilValue($computedInit(address))\n  const [status, setStatus] = useRecoilState($status(address))\n  const flow = useFlowBalance(address)\n  const kibble = useKibblesBalance(address)\n\n  function recheck() {\n    isAccountInitialized(address).then(setInit)\n  }\n\n  return {\n    ...init,\n    isInitialized,\n    status: isInitialized == null ? LOADING : status,\n    recheck,\n    async initialize() {\n      initializeAccount(address, {\n        onStart() {\n          setStatus(PROCESSING)\n        },\n        async onSuccess() {\n          recheck()\n          flow.refresh()\n          kibble.refresh()\n          setStatus(SUCCESS)\n        },\n        onError() {\n          setStatus(ERROR)\n        },\n        async onComplete() {\n          await sleep(IDLE_DELAY)\n          setStatus(IDLE)\n        },\n      })\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"module"}