{"ast":null,"code":"import _slicedToArray from\"/Users/mvps/culturex/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"/Users/mvps/culturex/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mvps/culturex/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{atomFamily,selectorFamily,useRecoilState}from\"recoil\";import{fetchFlowBalance}from\"../flow/fetch-flow-balance.script\";import{IDLE,PROCESSING}from\"../global/constants\";export var valueAtom=atomFamily({key:\"flow-balance::state\",default:selectorFamily({key:\"flow-balance::default\",get:function get(address){return/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",fetchFlowBalance(address));case 1:case\"end\":return _context.stop();}}},_callee);}));}})});export var statusAtom=atomFamily({key:\"flow-balance::status\",default:IDLE});export function useFlowBalance(address){var _useRecoilState=useRecoilState(valueAtom(address)),_useRecoilState2=_slicedToArray(_useRecoilState,2),balance=_useRecoilState2[0],setBalance=_useRecoilState2[1];var _useRecoilState3=useRecoilState(statusAtom(address)),_useRecoilState4=_slicedToArray(_useRecoilState3,2),status=_useRecoilState4[0],setStatus=_useRecoilState4[1];return{balance:balance,status:status,refresh:function refresh(){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setStatus(PROCESSING);_context2.next=3;return fetchFlowBalance(address).then(setBalance);case 3:setStatus(IDLE);case 4:case\"end\":return _context2.stop();}}},_callee2);}))();}};}","map":{"version":3,"sources":["/Users/mvps/culturex/web/src/hooks/use-flow-balance.hook.js"],"names":["atomFamily","selectorFamily","useRecoilState","fetchFlowBalance","IDLE","PROCESSING","valueAtom","key","default","get","address","statusAtom","useFlowBalance","balance","setBalance","status","setStatus","refresh","then"],"mappings":"0aAAA,OAAQA,UAAR,CAAoBC,cAApB,CAAoCC,cAApC,KAAyD,QAAzD,CACA,OAAQC,gBAAR,KAA+B,mCAA/B,CACA,OAAQC,IAAR,CAAcC,UAAd,KAA+B,qBAA/B,CAEA,MAAO,IAAMC,CAAAA,SAAS,CAAGN,UAAU,CAAC,CAClCO,GAAG,CAAE,qBAD6B,CAElCC,OAAO,CAAEP,cAAc,CAAC,CACtBM,GAAG,CAAE,uBADiB,CAEtBE,GAAG,CAAE,aAAAC,OAAO,6EAAI,mKAAYP,gBAAgB,CAACO,OAAD,CAA5B,wDAAJ,IAFU,CAAD,CAFW,CAAD,CAA5B,CAQP,MAAO,IAAMC,CAAAA,UAAU,CAAGX,UAAU,CAAC,CACnCO,GAAG,CAAE,sBAD8B,CAEnCC,OAAO,CAAEJ,IAF0B,CAAD,CAA7B,CAKP,MAAO,SAASQ,CAAAA,cAAT,CAAwBF,OAAxB,CAAiC,qBACRR,cAAc,CAACI,SAAS,CAACI,OAAD,CAAV,CADN,oDAC/BG,OAD+B,qBACtBC,UADsB,0CAEVZ,cAAc,CAACS,UAAU,CAACD,OAAD,CAAX,CAFJ,qDAE/BK,MAF+B,qBAEvBC,SAFuB,qBAItC,MAAO,CACLH,OAAO,CAAPA,OADK,CAELE,MAAM,CAANA,MAFK,CAGCE,OAHD,mBAGW,wMACdD,SAAS,CAACX,UAAD,CAAT,CADc,uBAERF,CAAAA,gBAAgB,CAACO,OAAD,CAAhB,CAA0BQ,IAA1B,CAA+BJ,UAA/B,CAFQ,QAGdE,SAAS,CAACZ,IAAD,CAAT,CAHc,6DAIf,CAPI,CAAP,CASD","sourcesContent":["import {atomFamily, selectorFamily, useRecoilState} from \"recoil\"\nimport {fetchFlowBalance} from \"../flow/fetch-flow-balance.script\"\nimport {IDLE, PROCESSING} from \"../global/constants\"\n\nexport const valueAtom = atomFamily({\n  key: \"flow-balance::state\",\n  default: selectorFamily({\n    key: \"flow-balance::default\",\n    get: address => async () => fetchFlowBalance(address),\n  }),\n})\n\nexport const statusAtom = atomFamily({\n  key: \"flow-balance::status\",\n  default: IDLE,\n})\n\nexport function useFlowBalance(address) {\n  const [balance, setBalance] = useRecoilState(valueAtom(address))\n  const [status, setStatus] = useRecoilState(statusAtom(address))\n\n  return {\n    balance,\n    status,\n    async refresh() {\n      setStatus(PROCESSING)\n      await fetchFlowBalance(address).then(setBalance)\n      setStatus(IDLE)\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"module"}