{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/mvps/culturex/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import{send,decode,script,args,arg,cdc}from\"@onflow/fcl\";import{Address}from\"@onflow/types\";var CODE=cdc(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  import FungibleToken from 0xFungibleToken\\n  import NonFungibleToken from 0xNonFungibleToken\\n  import CultureToken from 0xCultureToken\\n  import CulturalItems from 0xCulturalItems\\n  import CulturalItemsMarket from 0xCulturalItemsMarket\\n\\n  pub fun hasCultureToken(_ address: Address): Bool {\\n    let receiver: Bool = getAccount(address)\\n      .getCapability<&CultureToken.Vault{FungibleToken.Receiver}>(CultureToken.ReceiverPublicPath)\\n      .check()\\n\\n    let balance: Bool = getAccount(address)\\n      .getCapability<&CultureToken.Vault{FungibleToken.Balance}>(CultureToken.BalancePublicPath)\\n      .check()\\n\\n    return receiver && balance\\n  }\\n\\n  pub fun hasCulturalItems(_ address: Address): Bool {\\n    return getAccount(address)\\n      .getCapability<&CulturalItems.Collection{NonFungibleToken.CollectionPublic, CulturalItems.CulturalItemsCollectionPublic}>(CulturalItems.CollectionPublicPath)\\n      .check()\\n  }\\n\\n  pub fun hasCulturalItemsMarket(_ address: Address): Bool {\\n    return getAccount(address)\\n      .getCapability<&CulturalItemsMarket.Collection{CulturalItemsMarket.CollectionPublic}>(CulturalItemsMarket.CollectionPublicPath)\\n      .check()\\n  }\\n\\n  pub fun main(address: Address): {String: Bool} {\\n    let ret: {String: Bool} = {}\\n    ret[\\\"CultureToken\\\"] = hasCultureToken(address)\\n    ret[\\\"CulturalItems\\\"] = hasCulturalItems(address)\\n    ret[\\\"CulturalItemsMarket\\\"] = hasCulturalItemsMarket(address)\\n    return ret\\n  }\\n\"])));export function isAccountInitialized(address){if(address==null)return Promise.resolve(false);// prettier-ignore\nreturn send([script(CODE),args([arg(address,Address)])]).then(decode);}","map":{"version":3,"sources":["/Users/mvps/culturex/web/src/flow/is-account-initialized.script.js"],"names":["send","decode","script","args","arg","cdc","Address","CODE","isAccountInitialized","address","Promise","resolve","then"],"mappings":"mLAAA,OAAQA,IAAR,CAAcC,MAAd,CAAsBC,MAAtB,CAA8BC,IAA9B,CAAoCC,GAApC,CAAyCC,GAAzC,KAAmD,aAAnD,CACA,OAAQC,OAAR,KAAsB,eAAtB,CAEA,GAAMC,CAAAA,IAAI,CAAGF,GAAH,sgDAAV,CAwCA,MAAO,SAASG,CAAAA,oBAAT,CAA8BC,OAA9B,CAAuC,CAC5C,GAAIA,OAAO,EAAI,IAAf,CAAqB,MAAOC,CAAAA,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAAP,CAErB;AACA,MAAOX,CAAAA,IAAI,CAAC,CACVE,MAAM,CAACK,IAAD,CADI,CAEVJ,IAAI,CAAC,CACHC,GAAG,CAACK,OAAD,CAAUH,OAAV,CADA,CAAD,CAFM,CAAD,CAAJ,CAKJM,IALI,CAKCX,MALD,CAAP,CAMD","sourcesContent":["import {send, decode, script, args, arg, cdc} from \"@onflow/fcl\"\nimport {Address} from \"@onflow/types\"\n\nconst CODE = cdc`\n  import FungibleToken from 0xFungibleToken\n  import NonFungibleToken from 0xNonFungibleToken\n  import CultureToken from 0xCultureToken\n  import CulturalItems from 0xCulturalItems\n  import CulturalItemsMarket from 0xCulturalItemsMarket\n\n  pub fun hasCultureToken(_ address: Address): Bool {\n    let receiver: Bool = getAccount(address)\n      .getCapability<&CultureToken.Vault{FungibleToken.Receiver}>(CultureToken.ReceiverPublicPath)\n      .check()\n\n    let balance: Bool = getAccount(address)\n      .getCapability<&CultureToken.Vault{FungibleToken.Balance}>(CultureToken.BalancePublicPath)\n      .check()\n\n    return receiver && balance\n  }\n\n  pub fun hasCulturalItems(_ address: Address): Bool {\n    return getAccount(address)\n      .getCapability<&CulturalItems.Collection{NonFungibleToken.CollectionPublic, CulturalItems.CulturalItemsCollectionPublic}>(CulturalItems.CollectionPublicPath)\n      .check()\n  }\n\n  pub fun hasCulturalItemsMarket(_ address: Address): Bool {\n    return getAccount(address)\n      .getCapability<&CulturalItemsMarket.Collection{CulturalItemsMarket.CollectionPublic}>(CulturalItemsMarket.CollectionPublicPath)\n      .check()\n  }\n\n  pub fun main(address: Address): {String: Bool} {\n    let ret: {String: Bool} = {}\n    ret[\"CultureToken\"] = hasCultureToken(address)\n    ret[\"CulturalItems\"] = hasCulturalItems(address)\n    ret[\"CulturalItemsMarket\"] = hasCulturalItemsMarket(address)\n    return ret\n  }\n`\n\nexport function isAccountInitialized(address) {\n  if (address == null) return Promise.resolve(false)\n\n  // prettier-ignore\n  return send([\n    script(CODE),\n    args([\n      arg(address, Address)\n    ])\n  ]).then(decode)\n}\n"]},"metadata":{},"sourceType":"module"}