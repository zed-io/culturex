{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { atomFamily, selectorFamily, useRecoilState } from \"recoil\";\nimport { sansPrefix } from \"@onflow/fcl\";\nimport { IDLE, PROCESSING } from \"../global/constants\";\nimport { useCurrentUser } from \"../hooks/use-current-user.hook\";\nimport { useAccountItems } from \"../hooks/use-account-items.hook\";\nimport { useMarketItems } from \"../hooks/use-market-items.hook\";\nimport { useKibblesBalance } from \"../hooks/use-kibbles-balance.hook\";\nimport { fetchMarketItem } from \"../flow/fetch-market-item.script\";\nimport { buyMarketItem } from \"../flow/buy-market-item.tx\";\nimport { cancelMarketListing } from \"../flow/cancel-market-listing.tx\";\n\nfunction expand(key) {\n  return key.split(\"|\");\n}\n\nfunction comp(address, id) {\n  return [address, id].join(\"|\");\n}\n\nexport const $state = atomFamily({\n  key: \"market-item::state\",\n  default: selectorFamily({\n    key: \"market-item::default\",\n    get: key => async () => fetchMarketItem(...expand(key))\n  })\n});\nexport const $status = atomFamily({\n  key: \"market-item::status\",\n  default: IDLE\n});\nexport function useMarketItem(address, id) {\n  _s();\n\n  const [cu] = useCurrentUser();\n  const ownerItems = useAccountItems(address);\n  const cuItems = useAccountItems(cu.addr);\n  const ownerMarket = useMarketItems(address);\n  const cuMarket = useMarketItems(cu.addr);\n  const kibble = useKibblesBalance(cu.addr);\n  const key = comp(address, id);\n  const [item, setItem] = useRecoilState($state(key));\n  const [status, setStatus] = useRecoilState($status(key));\n  const owned = sansPrefix(cu.addr) === sansPrefix(address);\n  return { ...item,\n    status,\n    owned,\n\n    async buy() {\n      await buyMarketItem({\n        itemId: id,\n        ownerAddress: address\n      }, {\n        onStart() {\n          setStatus(PROCESSING);\n        },\n\n        async onSuccess() {\n          if (address !== cu.addr) {\n            ownerItems.refresh();\n            ownerMarket.refresh();\n          }\n\n          cuItems.refresh();\n          cuMarket.refresh();\n          kibble.refresh();\n        },\n\n        async onComplete() {\n          setStatus(IDLE);\n        }\n\n      });\n    },\n\n    async cancelListing() {\n      await cancelMarketListing({\n        itemId: id\n      }, {\n        onStart() {\n          setStatus(PROCESSING);\n        },\n\n        async onSuccess() {\n          cuItems.refresh();\n          cuMarket.refresh();\n          kibble.refresh();\n        },\n\n        async onComplete() {\n          setStatus(IDLE);\n        }\n\n      });\n    },\n\n    async refresh() {\n      setStatus(PROCESSING);\n      await fetchMarketItem(...expand(key)).then(setItem);\n      setStatus(IDLE);\n    }\n\n  };\n}\n\n_s(useMarketItem, \"1OK+i/NB7D9RO48rcniHLL/I7Zw=\", false, function () {\n  return [useCurrentUser, useAccountItems, useAccountItems, useMarketItems, useMarketItems, useKibblesBalance, useRecoilState, useRecoilState];\n});","map":{"version":3,"sources":["/Users/mvps/nfthack/culturex/web/src/hooks/use-market-item.hook.js"],"names":["atomFamily","selectorFamily","useRecoilState","sansPrefix","IDLE","PROCESSING","useCurrentUser","useAccountItems","useMarketItems","useKibblesBalance","fetchMarketItem","buyMarketItem","cancelMarketListing","expand","key","split","comp","address","id","join","$state","default","get","$status","useMarketItem","cu","ownerItems","cuItems","addr","ownerMarket","cuMarket","kibble","item","setItem","status","setStatus","owned","buy","itemId","ownerAddress","onStart","onSuccess","refresh","onComplete","cancelListing","then"],"mappings":"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","sourcesContent":["import {atomFamily, selectorFamily, useRecoilState} from \"recoil\"\nimport {sansPrefix} from \"@onflow/fcl\"\nimport {IDLE, PROCESSING} from \"../global/constants\"\nimport {useCurrentUser} from \"../hooks/use-current-user.hook\"\nimport {useAccountItems} from \"../hooks/use-account-items.hook\"\nimport {useMarketItems} from \"../hooks/use-market-items.hook\"\nimport {useKibblesBalance} from \"../hooks/use-kibbles-balance.hook\"\nimport {fetchMarketItem} from \"../flow/fetch-market-item.script\"\nimport {buyMarketItem} from \"../flow/buy-market-item.tx\"\nimport {cancelMarketListing} from \"../flow/cancel-market-listing.tx\"\n\nfunction expand(key) {\n  return key.split(\"|\")\n}\n\nfunction comp(address, id) {\n  return [address, id].join(\"|\")\n}\n\nexport const $state = atomFamily({\n  key: \"market-item::state\",\n  default: selectorFamily({\n    key: \"market-item::default\",\n    get: key => async () => fetchMarketItem(...expand(key)),\n  }),\n})\n\nexport const $status = atomFamily({\n  key: \"market-item::status\",\n  default: IDLE,\n})\n\nexport function useMarketItem(address, id) {\n  const [cu] = useCurrentUser()\n  const ownerItems = useAccountItems(address)\n  const cuItems = useAccountItems(cu.addr)\n  const ownerMarket = useMarketItems(address)\n  const cuMarket = useMarketItems(cu.addr)\n  const kibble = useKibblesBalance(cu.addr)\n  const key = comp(address, id)\n  const [item, setItem] = useRecoilState($state(key))\n  const [status, setStatus] = useRecoilState($status(key))\n\n  const owned = sansPrefix(cu.addr) === sansPrefix(address)\n\n  return {\n    ...item,\n    status,\n    owned,\n    async buy() {\n      await buyMarketItem(\n        {itemId: id, ownerAddress: address},\n        {\n          onStart() {\n            setStatus(PROCESSING)\n          },\n          async onSuccess() {\n            if (address !== cu.addr) {\n              ownerItems.refresh()\n              ownerMarket.refresh()\n            }\n            cuItems.refresh()\n            cuMarket.refresh()\n            kibble.refresh()\n          },\n          async onComplete() {\n            setStatus(IDLE)\n          },\n        }\n      )\n    },\n    async cancelListing() {\n      await cancelMarketListing(\n        {itemId: id},\n        {\n          onStart() {\n            setStatus(PROCESSING)\n          },\n          async onSuccess() {\n            cuItems.refresh()\n            cuMarket.refresh()\n            kibble.refresh()\n          },\n          async onComplete() {\n            setStatus(IDLE)\n          },\n        }\n      )\n    },\n    async refresh() {\n      setStatus(PROCESSING)\n      await fetchMarketItem(...expand(key)).then(setItem)\n      setStatus(IDLE)\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"module"}