{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/mvps/culturex/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import*as fcl from\"@onflow/fcl\";import*as t from\"@onflow/types\";import{tx}from\"./util/tx\";import{invariant}from\"@onflow/util-invariant\";var CODE=fcl.cdc(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  import CulturalItemsMarket from 0xCulturalItemsMarket\\n\\n  transaction(saleItemID: UInt64) {\\n      prepare(account: AuthAccount) {\\n          let listing <- account\\n            .borrow<&CulturalItemsMarket.Collection>(from: CulturalItemsMarket.CollectionStoragePath)!\\n            .remove(saleItemID: saleItemID)\\n          destroy listing\\n      }\\n  }\\n\"])));// prettier-ignore\nexport function cancelMarketListing(_ref){var itemId=_ref.itemId;var opts=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};invariant(itemId!=null,\"cancelMarketListing({itemId}) -- itemId required\");return tx([fcl.transaction(CODE),fcl.args([fcl.arg(Number(itemId),t.UInt64)]),fcl.proposer(fcl.authz),fcl.payer(fcl.authz),fcl.authorizations([fcl.authz]),fcl.limit(1000)],opts);}","map":{"version":3,"sources":["/Users/mvps/culturex/web/src/flow/cancel-market-listing.tx.js"],"names":["fcl","t","tx","invariant","CODE","cdc","cancelMarketListing","itemId","opts","transaction","args","arg","Number","UInt64","proposer","authz","payer","authorizations","limit"],"mappings":"mLAAA,MAAO,GAAKA,CAAAA,GAAZ,KAAqB,aAArB,CACA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,eAAnB,CACA,OAAQC,EAAR,KAAiB,WAAjB,CACA,OAAQC,SAAR,KAAwB,wBAAxB,CAEA,GAAMC,CAAAA,IAAI,CAAGJ,GAAG,CAACK,GAAP,0aAAV,CAaA;AACA,MAAO,SAASC,CAAAA,mBAAT,MAAoD,IAArBC,CAAAA,MAAqB,MAArBA,MAAqB,IAAXC,CAAAA,IAAW,2DAAJ,EAAI,CACzDL,SAAS,CAACI,MAAM,EAAI,IAAX,CAAiB,kDAAjB,CAAT,CAEA,MAAOL,CAAAA,EAAE,CAAC,CACRF,GAAG,CAACS,WAAJ,CAAgBL,IAAhB,CADQ,CAERJ,GAAG,CAACU,IAAJ,CAAS,CACPV,GAAG,CAACW,GAAJ,CAAQC,MAAM,CAACL,MAAD,CAAd,CAAwBN,CAAC,CAACY,MAA1B,CADO,CAAT,CAFQ,CAKRb,GAAG,CAACc,QAAJ,CAAad,GAAG,CAACe,KAAjB,CALQ,CAMRf,GAAG,CAACgB,KAAJ,CAAUhB,GAAG,CAACe,KAAd,CANQ,CAORf,GAAG,CAACiB,cAAJ,CAAmB,CAACjB,GAAG,CAACe,KAAL,CAAnB,CAPQ,CAQRf,GAAG,CAACkB,KAAJ,CAAU,IAAV,CARQ,CAAD,CASNV,IATM,CAAT,CAUD","sourcesContent":["import * as fcl from \"@onflow/fcl\"\nimport * as t from \"@onflow/types\"\nimport {tx} from \"./util/tx\"\nimport {invariant} from \"@onflow/util-invariant\"\n\nconst CODE = fcl.cdc`\n  import CulturalItemsMarket from 0xCulturalItemsMarket\n\n  transaction(saleItemID: UInt64) {\n      prepare(account: AuthAccount) {\n          let listing <- account\n            .borrow<&CulturalItemsMarket.Collection>(from: CulturalItemsMarket.CollectionStoragePath)!\n            .remove(saleItemID: saleItemID)\n          destroy listing\n      }\n  }\n`\n\n// prettier-ignore\nexport function cancelMarketListing({ itemId }, opts = {}) {\n  invariant(itemId != null, \"cancelMarketListing({itemId}) -- itemId required\")\n\n  return tx([\n    fcl.transaction(CODE),\n    fcl.args([\n      fcl.arg(Number(itemId), t.UInt64),\n    ]),\n    fcl.proposer(fcl.authz),\n    fcl.payer(fcl.authz),\n    fcl.authorizations([fcl.authz]),\n    fcl.limit(1000),\n  ], opts)\n}\n"]},"metadata":{},"sourceType":"module"}