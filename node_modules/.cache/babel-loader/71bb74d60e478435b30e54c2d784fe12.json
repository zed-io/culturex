{"ast":null,"code":"import * as fcl from \"@onflow/fcl\";\nimport * as t from \"@onflow/types\";\nimport { tx } from \"./util/tx\";\nimport { invariant } from \"@onflow/util-invariant\";\nconst CODE = fcl.cdc`\n  import CulturalItemsMarket from 0xCulturalItemsMarket\n\n  transaction(saleItemID: UInt64) {\n      prepare(account: AuthAccount) {\n          let listing <- account\n            .borrow<&CulturalItemsMarket.Collection>(from: CulturalItemsMarket.CollectionStoragePath)!\n            .remove(saleItemID: saleItemID)\n          destroy listing\n      }\n  }\n`; // prettier-ignore\n\nexport function cancelMarketListing({\n  itemId\n}, opts = {}) {\n  invariant(itemId != null, \"cancelMarketListing({itemId}) -- itemId required\");\n  return tx([fcl.transaction(CODE), fcl.args([fcl.arg(Number(itemId), t.UInt64)]), fcl.proposer(fcl.authz), fcl.payer(fcl.authz), fcl.authorizations([fcl.authz]), fcl.limit(1000)], opts);\n}","map":{"version":3,"sources":["/Users/mvps/culturex/web/src/flow/cancel-market-listing.tx.js"],"names":["fcl","t","tx","invariant","CODE","cdc","cancelMarketListing","itemId","opts","transaction","args","arg","Number","UInt64","proposer","authz","payer","authorizations","limit"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,aAArB;AACA,OAAO,KAAKC,CAAZ,MAAmB,eAAnB;AACA,SAAQC,EAAR,QAAiB,WAAjB;AACA,SAAQC,SAAR,QAAwB,wBAAxB;AAEA,MAAMC,IAAI,GAAGJ,GAAG,CAACK,GAAI;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA,C,CAaA;;AACA,OAAO,SAASC,mBAAT,CAA6B;AAAEC,EAAAA;AAAF,CAA7B,EAAyCC,IAAI,GAAG,EAAhD,EAAoD;AACzDL,EAAAA,SAAS,CAACI,MAAM,IAAI,IAAX,EAAiB,kDAAjB,CAAT;AAEA,SAAOL,EAAE,CAAC,CACRF,GAAG,CAACS,WAAJ,CAAgBL,IAAhB,CADQ,EAERJ,GAAG,CAACU,IAAJ,CAAS,CACPV,GAAG,CAACW,GAAJ,CAAQC,MAAM,CAACL,MAAD,CAAd,EAAwBN,CAAC,CAACY,MAA1B,CADO,CAAT,CAFQ,EAKRb,GAAG,CAACc,QAAJ,CAAad,GAAG,CAACe,KAAjB,CALQ,EAMRf,GAAG,CAACgB,KAAJ,CAAUhB,GAAG,CAACe,KAAd,CANQ,EAORf,GAAG,CAACiB,cAAJ,CAAmB,CAACjB,GAAG,CAACe,KAAL,CAAnB,CAPQ,EAQRf,GAAG,CAACkB,KAAJ,CAAU,IAAV,CARQ,CAAD,EASNV,IATM,CAAT;AAUD","sourcesContent":["import * as fcl from \"@onflow/fcl\"\nimport * as t from \"@onflow/types\"\nimport {tx} from \"./util/tx\"\nimport {invariant} from \"@onflow/util-invariant\"\n\nconst CODE = fcl.cdc`\n  import CulturalItemsMarket from 0xCulturalItemsMarket\n\n  transaction(saleItemID: UInt64) {\n      prepare(account: AuthAccount) {\n          let listing <- account\n            .borrow<&CulturalItemsMarket.Collection>(from: CulturalItemsMarket.CollectionStoragePath)!\n            .remove(saleItemID: saleItemID)\n          destroy listing\n      }\n  }\n`\n\n// prettier-ignore\nexport function cancelMarketListing({ itemId }, opts = {}) {\n  invariant(itemId != null, \"cancelMarketListing({itemId}) -- itemId required\")\n\n  return tx([\n    fcl.transaction(CODE),\n    fcl.args([\n      fcl.arg(Number(itemId), t.UInt64),\n    ]),\n    fcl.proposer(fcl.authz),\n    fcl.payer(fcl.authz),\n    fcl.authorizations([fcl.authz]),\n    fcl.limit(1000),\n  ], opts)\n}\n"]},"metadata":{},"sourceType":"module"}