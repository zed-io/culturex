{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { atomFamily, selectorFamily, useRecoilState } from \"recoil\";\nimport { fetchMarketItems } from \"../flow/fetch-market-items.script\";\nimport { IDLE, PROCESSING } from \"../global/constants\";\nexport const $state = atomFamily({\n  key: \"market-items::state\",\n  default: selectorFamily({\n    key: \"market-items::default\",\n    get: address => async () => fetchMarketItems(address)\n  })\n});\nexport const $status = atomFamily({\n  key: \"market-items::status\",\n  default: IDLE\n});\nexport function useMarketItems(address) {\n  _s();\n\n  const [items, setItems] = useRecoilState($state(address));\n  const [status, setStatus] = useRecoilState($status(address));\n  const asSet = new Set(items);\n  return {\n    ids: items,\n    status,\n\n    async refresh() {\n      setStatus(PROCESSING);\n      await fetchMarketItems(address).then(setItems);\n      setStatus(IDLE);\n    },\n\n    has(id) {\n      return asSet.has(id);\n    }\n\n  };\n}\n\n_s(useMarketItems, \"DmkXXUMosCXNAGhNP9LfFG5MUPY=\", false, function () {\n  return [useRecoilState, useRecoilState];\n});","map":{"version":3,"sources":["/Users/mvps/nfthack/culturex/web/src/hooks/use-market-items.hook.js"],"names":["atomFamily","selectorFamily","useRecoilState","fetchMarketItems","IDLE","PROCESSING","$state","key","default","get","address","$status","useMarketItems","items","setItems","status","setStatus","asSet","Set","ids","refresh","then","has","id"],"mappings":";;AAAA,SAAQA,UAAR,EAAoBC,cAApB,EAAoCC,cAApC,QAAyD,QAAzD;AACA,SAAQC,gBAAR,QAA+B,mCAA/B;AACA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,qBAA/B;AAEA,OAAO,MAAMC,MAAM,GAAGN,UAAU,CAAC;AAC/BO,EAAAA,GAAG,EAAE,qBAD0B;AAE/BC,EAAAA,OAAO,EAAEP,cAAc,CAAC;AACtBM,IAAAA,GAAG,EAAE,uBADiB;AAEtBE,IAAAA,GAAG,EAAEC,OAAO,IAAI,YAAYP,gBAAgB,CAACO,OAAD;AAFtB,GAAD;AAFQ,CAAD,CAAzB;AAQP,OAAO,MAAMC,OAAO,GAAGX,UAAU,CAAC;AAChCO,EAAAA,GAAG,EAAE,sBAD2B;AAEhCC,EAAAA,OAAO,EAAEJ;AAFuB,CAAD,CAA1B;AAKP,OAAO,SAASQ,cAAT,CAAwBF,OAAxB,EAAiC;AAAA;;AACtC,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBZ,cAAc,CAACI,MAAM,CAACI,OAAD,CAAP,CAAxC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBd,cAAc,CAACS,OAAO,CAACD,OAAD,CAAR,CAA1C;AAEA,QAAMO,KAAK,GAAG,IAAIC,GAAJ,CAAQL,KAAR,CAAd;AAEA,SAAO;AACLM,IAAAA,GAAG,EAAEN,KADA;AAELE,IAAAA,MAFK;;AAGL,UAAMK,OAAN,GAAgB;AACdJ,MAAAA,SAAS,CAACX,UAAD,CAAT;AACA,YAAMF,gBAAgB,CAACO,OAAD,CAAhB,CAA0BW,IAA1B,CAA+BP,QAA/B,CAAN;AACAE,MAAAA,SAAS,CAACZ,IAAD,CAAT;AACD,KAPI;;AAQLkB,IAAAA,GAAG,CAACC,EAAD,EAAK;AACN,aAAON,KAAK,CAACK,GAAN,CAAUC,EAAV,CAAP;AACD;;AAVI,GAAP;AAYD;;GAlBeX,c;UACYV,c,EACEA,c","sourcesContent":["import {atomFamily, selectorFamily, useRecoilState} from \"recoil\"\nimport {fetchMarketItems} from \"../flow/fetch-market-items.script\"\nimport {IDLE, PROCESSING} from \"../global/constants\"\n\nexport const $state = atomFamily({\n  key: \"market-items::state\",\n  default: selectorFamily({\n    key: \"market-items::default\",\n    get: address => async () => fetchMarketItems(address),\n  }),\n})\n\nexport const $status = atomFamily({\n  key: \"market-items::status\",\n  default: IDLE,\n})\n\nexport function useMarketItems(address) {\n  const [items, setItems] = useRecoilState($state(address))\n  const [status, setStatus] = useRecoilState($status(address))\n\n  const asSet = new Set(items)\n\n  return {\n    ids: items,\n    status,\n    async refresh() {\n      setStatus(PROCESSING)\n      await fetchMarketItems(address).then(setItems)\n      setStatus(IDLE)\n    },\n    has(id) {\n      return asSet.has(id)\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"module"}